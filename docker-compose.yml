version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  postgres11:
    driver: ${VOLUMES_DRIVER}
  postgres96:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}

services:
  ### Workspace Utilities ##################################
  workspace:
    build:
      context: ./workspace
      args:
        - LARADOCK_PHP_VERSION=7.2
        - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_SUBVERSION=${WORKSPACE_INSTALL_SUBVERSION}
        - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
        - INSTALL_PHPDBG=${WORKSPACE_INSTALL_PHPDBG}
        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
        - INSTALL_SSH2=${WORKSPACE_INSTALL_SSH2}
        - INSTALL_GMP=${WORKSPACE_INSTALL_GMP}
        - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}
        - INSTALL_XSL=${WORKSPACE_INSTALL_XSL}
        - INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}
        - INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}
        - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
        - INSTALL_AMQP=${WORKSPACE_INSTALL_AMQP}
        - INSTALL_CASSANDRA=${WORKSPACE_INSTALL_CASSANDRA}
        - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
        - INSTALL_MSSQL=${WORKSPACE_INSTALL_MSSQL}
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}
        - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
        - INSTALL_NPM_GULP=${WORKSPACE_INSTALL_NPM_GULP}
        - INSTALL_NPM_BOWER=${WORKSPACE_INSTALL_NPM_BOWER}
        - INSTALL_NPM_VUE_CLI=${WORKSPACE_INSTALL_NPM_VUE_CLI}
        - INSTALL_NPM_ANGULAR_CLI=${WORKSPACE_INSTALL_NPM_ANGULAR_CLI}
        - INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}
        - INSTALL_WP_CLI=${WORKSPACE_INSTALL_WP_CLI}
        - INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE}
        - INSTALL_AEROSPIKE=${WORKSPACE_INSTALL_AEROSPIKE}
        - INSTALL_V8JS=${WORKSPACE_INSTALL_V8JS}
        - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
        - COMPOSER_AUTH=${WORKSPACE_COMPOSER_AUTH}
        - COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}
        - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
        - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
        - INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}
        - INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER}
        - INSTALL_PRESTISSIMO=${WORKSPACE_INSTALL_PRESTISSIMO}
        - INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}
        - INSTALL_MC=${WORKSPACE_INSTALL_MC}
        - INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY}
        - INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}
        - INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}
        - INSTALL_TERRAFORM=${WORKSPACE_INSTALL_TERRAFORM}
        - INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}
        - INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}
        - INSTALL_PHALCON=${WORKSPACE_INSTALL_PHALCON}
        - INSTALL_SWOOLE=${WORKSPACE_INSTALL_SWOOLE}
        - INSTALL_TAINT=${WORKSPACE_INSTALL_TAINT}
        - INSTALL_LIBPNG=${WORKSPACE_INSTALL_LIBPNG}
        - INSTALL_IONCUBE=${WORKSPACE_INSTALL_IONCUBE}
        - INSTALL_MYSQL_CLIENT=${WORKSPACE_INSTALL_MYSQL_CLIENT}
        - INSTALL_PING=${WORKSPACE_INSTALL_PING}
        - INSTALL_SSHPASS=${WORKSPACE_INSTALL_SSHPASS}
        - INSTALL_SUPERVISOR=${WORKSPACE_INSTALL_SUPERVISOR}
        - PUID=${WORKSPACE_PUID}
        - PGID=${WORKSPACE_PGID}
        - CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - YARN_VERSION=${WORKSPACE_YARN_VERSION}
        - DRUSH_VERSION=${WORKSPACE_DRUSH_VERSION}
        - TZ=${WORKSPACE_TIMEZONE}
        - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
        - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
        - INSTALL_POWERLINE=${WORKSPACE_INSTALL_POWERLINE}
        - INSTALL_FFMPEG=${WORKSPACE_INSTALL_FFMPEG}
        - INSTALL_GNU_PARALLEL=${WORKSPACE_INSTALL_GNU_PARALLEL}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
    tty: true
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2375
    links:
      - docker-in-docker
    networks:
      frontend:
        aliases:
          - cloud.spgr
          - local.spgr
          - epp.spgr
          - uzd.spgr
          - repair.spgr
          - ms-ed.cloud.spgr
          - ms-ed.local.spgr
          - egk.astra
          - cuv.laravel
          - mbtools.laravel
      backend:
        aliases:
          - cloud.spgr
          - local.spgr
          - epp.spgr
          - uzd.spgr
          - repair.spgr
          - ms-ed.cloud.spgr
          - ms-ed.local.spgr
          - egk.astra
          - cuv.laravel
          - mbtools.laravel

  ### PHP-FPM 7.0 ##############################################
  php-fpm-70:
    build:
      context: ./php-fpm
      dockerfile: 70-Dockerfile
      args:
        - LARADOCK_PHP_VERSION=7.0
        - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}
        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
        - INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}
        - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
        - INSTALL_XSL=${PHP_FPM_INSTALL_XSL}
        - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
        - INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}
        - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
        - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
        - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
        - INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
        - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
        - INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_TAINT=${PHP_FPM_INSTALL_TAINT}
        - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
        - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
        - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}
        - INSTALL_APCU=${PHP_FPM_INSTALL_APCU}
        - INSTALL_YAML=${PHP_FPM_INSTALL_YAML}
        - INSTALL_RDKAFKA=${PHP_FPM_INSTALL_RDKAFKA}
        - INSTALL_ADDITIONAL_LOCALES=${PHP_FPM_INSTALL_ADDITIONAL_LOCALES}
        - INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}
        - INSTALL_PING=${PHP_FPM_INSTALL_PING}
        - INSTALL_SSHPASS=${PHP_FPM_INSTALL_SSHPASS}
        - ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}
        - INSTALL_FFMPEG=${PHP_FPM_FFMPEG}
        - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./php-fpm/php7.0.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    expose:
      - "9070"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2375
      - FAKETIME=${PHP_FPM_FAKETIME}
      - PHP_VERSION=7.0
    depends_on:
      - workspace
    networks:
      backend:
        aliases:
          - egk.astra
          - cuv.laravel
    links:
      - docker-in-docker

  php-fpm-72:
    build:
      context: ./php-fpm
      dockerfile: 72-Dockerfile
      args:
        - LARADOCK_PHP_VERSION=7.2
        - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}
        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
        - INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}
        - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
        - INSTALL_XSL=${PHP_FPM_INSTALL_XSL}
        - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
        - INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}
        - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
        - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
        - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
        - INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
        - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
        - INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_TAINT=${PHP_FPM_INSTALL_TAINT}
        - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
        - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
        - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}
        - INSTALL_APCU=${PHP_FPM_INSTALL_APCU}
        - INSTALL_YAML=${PHP_FPM_INSTALL_YAML}
        - INSTALL_RDKAFKA=${PHP_FPM_INSTALL_RDKAFKA}
        - INSTALL_ADDITIONAL_LOCALES=${PHP_FPM_INSTALL_ADDITIONAL_LOCALES}
        - INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}
        - INSTALL_PING=${PHP_FPM_INSTALL_PING}
        - INSTALL_SSHPASS=${PHP_FPM_INSTALL_SSHPASS}
        - ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}
        - INSTALL_FFMPEG=${PHP_FPM_FFMPEG}
        - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./php-fpm/php7.2.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    expose:
      - "9072"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2375
      - FAKETIME=${PHP_FPM_FAKETIME}
      - PHP_VERSION=7.2
    depends_on:
      - workspace
    networks:
      backend:
        aliases:
          - cloud.spgr
          - local.spgr
          - epp.spgr
          - uzd.spgr
          - repair.spgr
          - ms-ed.cloud.spgr
          - ms-ed.local.spgr
    links:
      - docker-in-docker

  php-fpm-74:
    build:
      context: ./php-fpm
      dockerfile: 74-Dockerfile
      args:
        - LARADOCK_PHP_VERSION=7.4
        - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}
        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
        - INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}
        - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
        - INSTALL_XSL=${PHP_FPM_INSTALL_XSL}
        - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
        - INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}
        - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
        - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
        - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
        - INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
        - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
        - INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_TAINT=${PHP_FPM_INSTALL_TAINT}
        - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
        - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
        - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}
        - INSTALL_APCU=${PHP_FPM_INSTALL_APCU}
        - INSTALL_YAML=${PHP_FPM_INSTALL_YAML}
        - INSTALL_RDKAFKA=${PHP_FPM_INSTALL_RDKAFKA}
        - INSTALL_ADDITIONAL_LOCALES=${PHP_FPM_INSTALL_ADDITIONAL_LOCALES}
        - INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}
        - INSTALL_PING=${PHP_FPM_INSTALL_PING}
        - INSTALL_SSHPASS=${PHP_FPM_INSTALL_SSHPASS}
        - ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}
        - INSTALL_FFMPEG=${PHP_FPM_FFMPEG}
        - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./php-fpm/php7.4.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    expose:
      - "9074"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2375
      - FAKETIME=${PHP_FPM_FAKETIME}
      - PHP_VERSION=7.4
    depends_on:
      - workspace
    networks:
      backend:
        aliases:
          - mbtools.laravel
    links:
      - docker-in-docker

  ### NGINX Server #########################################
  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm-70
      - php-fpm-72
      - php-fpm-74
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      frontend:
        aliases:
          - cloud.spgr
          - local.spgr
          - epp.spgr
          - uzd.spgr
          - repair.spgr
          - ms-ed.cloud.spgr
          - ms-ed.local.spgr
          - egk.astra
          - cuv.laravel
          - mbtools.laravel
      backend:
        aliases:
          - cloud.spgr
          - local.spgr
          - epp.spgr
          - uzd.spgr
          - repair.spgr
          - ms-ed.cloud.spgr
          - ms-ed.local.spgr
          - egk.astra
          - cuv.laravel
          - mbtools.laravel

  ### MySQL ################################################
  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

  ### PostgreSQL ###########################################
  postgres11:
    build: ./postgres11
    volumes:
      - ${DATA_PATH_HOST}/postgres11:/var/lib/postgresql/data
      - ./postgres11/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - GITLAB_POSTGRES_INIT=${GITLAB_POSTGRES_INIT}
      - GITLAB_POSTGRES_USER=${GITLAB_POSTGRES_USER}
      - GITLAB_POSTGRES_PASSWORD=${GITLAB_POSTGRES_PASSWORD}
      - GITLAB_POSTGRES_DB=${GITLAB_POSTGRES_DB}
      - JUPYTERHUB_POSTGRES_INIT=${JUPYTERHUB_POSTGRES_INIT}
      - JUPYTERHUB_POSTGRES_USER=${JUPYTERHUB_POSTGRES_USER}
      - JUPYTERHUB_POSTGRES_PASSWORD=${JUPYTERHUB_POSTGRES_PASSWORD}
      - JUPYTERHUB_POSTGRES_DB=${JUPYTERHUB_POSTGRES_DB}
      - SONARQUBE_POSTGRES_INIT=${SONARQUBE_POSTGRES_INIT}
      - SONARQUBE_POSTGRES_DB=${SONARQUBE_POSTGRES_DB}
      - SONARQUBE_POSTGRES_USER=${SONARQUBE_POSTGRES_USER}
      - SONARQUBE_POSTGRES_PASSWORD=${SONARQUBE_POSTGRES_PASSWORD}
      - POSTGRES_CONFLUENCE_INIT=${CONFLUENCE_POSTGRES_INIT}
      - POSTGRES_CONFLUENCE_DB=${CONFLUENCE_POSTGRES_DB}
      - POSTGRES_CONFLUENCE_USER=${CONFLUENCE_POSTGRES_USER}
      - POSTGRES_CONFLUENCE_PASSWORD=${CONFLUENCE_POSTGRES_PASSWORD}
    networks:
      - backend

  postgres13:
    build: ./postgres13
    volumes:
      - ${DATA_PATH_HOST}/postgres13:/var/lib/postgresql/data
      - ./postgres13/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5434:5434"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - GITLAB_POSTGRES_INIT=${GITLAB_POSTGRES_INIT}
      - GITLAB_POSTGRES_USER=${GITLAB_POSTGRES_USER}
      - GITLAB_POSTGRES_PASSWORD=${GITLAB_POSTGRES_PASSWORD}
      - GITLAB_POSTGRES_DB=${GITLAB_POSTGRES_DB}
      - JUPYTERHUB_POSTGRES_INIT=${JUPYTERHUB_POSTGRES_INIT}
      - JUPYTERHUB_POSTGRES_USER=${JUPYTERHUB_POSTGRES_USER}
      - JUPYTERHUB_POSTGRES_PASSWORD=${JUPYTERHUB_POSTGRES_PASSWORD}
      - JUPYTERHUB_POSTGRES_DB=${JUPYTERHUB_POSTGRES_DB}
      - SONARQUBE_POSTGRES_INIT=${SONARQUBE_POSTGRES_INIT}
      - SONARQUBE_POSTGRES_DB=${SONARQUBE_POSTGRES_DB}
      - SONARQUBE_POSTGRES_USER=${SONARQUBE_POSTGRES_USER}
      - SONARQUBE_POSTGRES_PASSWORD=${SONARQUBE_POSTGRES_PASSWORD}
      - POSTGRES_CONFLUENCE_INIT=${CONFLUENCE_POSTGRES_INIT}
      - POSTGRES_CONFLUENCE_DB=${CONFLUENCE_POSTGRES_DB}
      - POSTGRES_CONFLUENCE_USER=${CONFLUENCE_POSTGRES_USER}
      - POSTGRES_CONFLUENCE_PASSWORD=${CONFLUENCE_POSTGRES_PASSWORD}
    networks:
      - backend

  postgres96:
    build: ./postgres96
    volumes:
      - ${DATA_PATH_HOST}/postgres96:/var/lib/postgresql/data
      - ./postgres96/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - GITLAB_POSTGRES_INIT=${GITLAB_POSTGRES_INIT}
      - GITLAB_POSTGRES_USER=${GITLAB_POSTGRES_USER}
      - GITLAB_POSTGRES_PASSWORD=${GITLAB_POSTGRES_PASSWORD}
      - GITLAB_POSTGRES_DB=${GITLAB_POSTGRES_DB}
      - JUPYTERHUB_POSTGRES_INIT=${JUPYTERHUB_POSTGRES_INIT}
      - JUPYTERHUB_POSTGRES_USER=${JUPYTERHUB_POSTGRES_USER}
      - JUPYTERHUB_POSTGRES_PASSWORD=${JUPYTERHUB_POSTGRES_PASSWORD}
      - JUPYTERHUB_POSTGRES_DB=${JUPYTERHUB_POSTGRES_DB}
      - SONARQUBE_POSTGRES_INIT=${SONARQUBE_POSTGRES_INIT}
      - SONARQUBE_POSTGRES_DB=${SONARQUBE_POSTGRES_DB}
      - SONARQUBE_POSTGRES_USER=${SONARQUBE_POSTGRES_USER}
      - SONARQUBE_POSTGRES_PASSWORD=${SONARQUBE_POSTGRES_PASSWORD}
      - POSTGRES_CONFLUENCE_INIT=${CONFLUENCE_POSTGRES_INIT}
      - POSTGRES_CONFLUENCE_DB=${CONFLUENCE_POSTGRES_DB}
      - POSTGRES_CONFLUENCE_USER=${CONFLUENCE_POSTGRES_USER}
      - POSTGRES_CONFLUENCE_PASSWORD=${CONFLUENCE_POSTGRES_PASSWORD}
    networks:
      - backend

  ### Redis ################################################
  redis:
    build: ./redis
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend


  ### RabbitMQ #############################################
  rabbitmq:
    build: ./rabbitmq
    ports:
      - "${RABBITMQ_NODE_HOST_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
      - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"
    privileged: true
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    hostname: laradock-rabbitmq
    volumes:
      - ${DATA_PATH_HOST}/rabbitmq:/var/lib/rabbitmq
    depends_on:
      - php-fpm-70
      - php-fpm-72
      - php-fpm-74
    networks:
      - backend

  ### Laravel Echo Server #######################################
  laravel-echo-server:
    build:
      context: ./laravel-echo-server
    volumes:
      - ./laravel-echo-server/laravel-echo-server.json:/app/laravel-echo-server.json:ro
    ports:
      - "${LARAVEL_ECHO_SERVER_PORT}:6001"
    links:
      - redis
    networks:
      - frontend
      - backend

  ### Docker-in-Docker ################################################
  docker-in-docker:
    image: docker:dind
    privileged: true
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
    expose:
      - 2375
    networks:
      - backend
